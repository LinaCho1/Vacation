{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jycho\\\\OneDrive\\\\Desktop\\\\\\uC6F9\\uC571\\uC81C\\uC791\\uC911\\\\vacation-scheduler\\\\src\\\\components\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Paper, Box, Typography, Chip, IconButton } from '@mui/material';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { getDay, differenceInMinutes } from 'date-fns';\nimport TodoList from './TodoList';\nimport { format as formatDate } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SLOT_HEIGHT = 48; // 1시간 슬롯의 높이(px)\nconst PERSONS = ['조운', '지윤'];\nfunction Calendar({\n  events,\n  onDeleteEvent\n}) {\n  _s();\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const getEventsForDate = date => {\n    const dayOfWeek = getDay(date); // 0: 일요일, 1: 월요일, ..., 6: 토요일\n    return events.filter(event => {\n      // 해당 날짜가 이벤트 기간 내에 있는지 확인\n      const isInPeriod = date >= event.start && date <= event.end;\n      // 해당 요일에 수업이 있는지 확인\n      const isOnDay = event.dayOfWeek.includes(dayOfWeek);\n      return isInPeriod && isOnDay;\n    }).sort((a, b) => {\n      const timeA = a.timeSlot.split('-')[0];\n      const timeB = b.timeSlot.split('-')[0];\n      return timeA.localeCompare(timeB);\n    });\n  };\n\n  // 오전 8시부터 저녁 9시까지 1시간 단위로 시간대 생성\n  const timeSlots = Array.from({\n    length: 14\n  }, (_, i) => `${(i + 8).toString().padStart(2, '0')}:00`);\n  const filteredEvents = selectedDate ? getEventsForDate(selectedDate) : [];\n\n  // 시간 문자열(HH:MM)을 Date 객체로 변환 (선택한 날짜 기준)\n  const getSlotDate = (baseDate, time) => {\n    const [hour, minute] = time.split(':');\n    const d = new Date(baseDate);\n    d.setHours(Number(hour), Number(minute), 0, 0);\n    return d;\n  };\n\n  // 각 슬롯마다 해당 슬롯이 일정의 범위(시작~끝)에 걸쳐 있으면 반환\n  const getEventsInSlotByPerson = slotTime => {\n    const slotStart = getSlotDate(selectedDate, slotTime);\n    const nextSlot = getSlotDate(selectedDate, `${(parseInt(slotTime.split(':')[0]) + 1).toString().padStart(2, '0')}:00`);\n    const result = {\n      '조운': null,\n      '지윤': null\n    };\n    filteredEvents.forEach(event => {\n      const [startStr, endStr] = event.timeSlot.split('-');\n      const eventStart = getSlotDate(selectedDate, startStr);\n      const eventEnd = getSlotDate(selectedDate, endStr);\n      // 이 슬롯이 일정의 범위에 걸쳐 있으면\n      if (slotStart < eventEnd && nextSlot > eventStart) {\n        const isStart = eventStart >= slotStart && eventStart < nextSlot;\n        const isEnd = eventEnd > slotStart && eventEnd <= nextSlot;\n        // 이 슬롯에서 차지하는 높이 계산\n        let minutes = 60;\n        if (isStart && isEnd) {\n          minutes = differenceInMinutes(eventEnd, eventStart);\n        } else if (isStart) {\n          minutes = differenceInMinutes(nextSlot, eventStart);\n        } else if (isEnd) {\n          minutes = differenceInMinutes(eventEnd, slotStart);\n        }\n        result[event.person] = {\n          event,\n          isStart,\n          isEnd,\n          height: minutes / 60 * SLOT_HEIGHT\n        };\n      }\n    });\n    return result;\n  };\n\n  // borderRadius 스타일 (시작/끝/한칸짜리)\n  const getSlotBoxRadius = (isStart, isEnd) => {\n    if (isStart && isEnd) return '12px';\n    if (isStart) return '12px 12px 0 0';\n    if (isEnd) return '0 0 12px 12px';\n    return '0';\n  };\n\n  // 요일 한글 변환 함수\n  const getKoreanDay = date => {\n    const days = ['일', '월', '화', '수', '목', '금', '토'];\n    return days[getDay(date)];\n  };\n\n  // 도우미 안내표\n  const helpers = [{\n    day: '월요일',\n    name: '엄마'\n  }, {\n    day: '화요일',\n    name: '친할머니'\n  }, {\n    day: '수요일',\n    name: '아빠'\n  }, {\n    day: '목요일',\n    name: '이모님'\n  }, {\n    day: '금요일',\n    name: '외할머니'\n  }];\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      mt: 2,\n      background: 'linear-gradient(135deg, #fffde4 0%, #f9f6ff 100%)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          minWidth: 320,\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(DateCalendar, {\n          value: selectedDate,\n          onChange: newDate => setSelectedDate(newDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), selectedDate && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TodoList, {\n            person: \"\\uC870\\uC6B4\",\n            date: formatDate(selectedDate, 'yyyy-MM-dd'),\n            month: formatDate(selectedDate, 'yyyy-MM')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n            person: \"\\uC9C0\\uC724\",\n            date: formatDate(selectedDate, 'yyyy-MM-dd'),\n            month: formatDate(selectedDate, 'yyyy-MM')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          sx: {\n            fontWeight: 900,\n            color: '#7c4dff',\n            letterSpacing: 1\n          },\n          children: \"2025\\uB144 \\uC870\\uC6B4, \\uC9C0\\uC724 \\uC5EC\\uB984\\uBC29\\uD559 \\uC2A4\\uCF00\\uC904 \\uD83C\\uDF08\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mb: 2\n          },\n          children: helpers.map((helper, idx) => {\n            const emojis = ['👩‍👧', '👵', '👨‍👧', '👩‍🦰', '👵'];\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                bgcolor: ['#ffe0b2', '#b3e5fc', '#c8e6c9', '#f8bbd0', '#fff9c4'][idx],\n                borderRadius: 2,\n                px: 2,\n                py: 0.5,\n                fontSize: 15,\n                minWidth: 70\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontWeight: 700,\n                  fontSize: 15\n                },\n                children: [emojis[idx], \" \", helper.day]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: 14\n                },\n                children: helper.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, helper.day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: \"\\uC870\\uC6B4\",\n            sx: {\n              bgcolor: '#b3e5fc',\n              color: '#222',\n              fontWeight: 700,\n              borderRadius: 2,\n              px: 2,\n              fontSize: 15\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"\\uC9C0\\uC724\",\n            sx: {\n              bgcolor: '#f8bbd0',\n              color: '#222',\n              fontWeight: 700,\n              borderRadius: 2,\n              px: 2,\n              fontSize: 15\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: timeSlots.map(timeSlot => {\n            const eventsByPerson = getEventsInSlotByPerson(timeSlot);\n            // 각 인물별로 해당 슬롯에서 시작하는 일정의 height를 구함\n            const slotHeights = PERSONS.map(person => {\n              const info = eventsByPerson[person];\n              if (info && info.isStart) {\n                // 시작 슬롯이면 height 반환\n                const event = info.event;\n                const [startStr, endStr] = event.timeSlot.split('-');\n                const eventStart = getSlotDate(selectedDate, startStr);\n                const eventEnd = getSlotDate(selectedDate, endStr);\n                return differenceInMinutes(eventEnd, eventStart) / 60 * SLOT_HEIGHT;\n              }\n              return SLOT_HEIGHT;\n            });\n            const maxSlotHeight = Math.max(...slotHeights, SLOT_HEIGHT);\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 0,\n                display: 'flex',\n                alignItems: 'flex-start',\n                borderLeft: '1px solid #e0e0e0',\n                borderRight: '1px solid #e0e0e0',\n                borderBottom: '1px solid #e0e0e0',\n                position: 'relative',\n                p: 0,\n                minHeight: `${SLOT_HEIGHT}px`\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                sx: {\n                  width: 60,\n                  minWidth: 60,\n                  textAlign: 'right',\n                  pt: '12px',\n                  zIndex: 2,\n                  background: '#fff',\n                  m: 0,\n                  p: 0,\n                  mr: 2\n                },\n                children: timeSlot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: 1,\n                  ml: 0,\n                  display: 'flex',\n                  gap: 0,\n                  position: 'relative',\n                  p: 0,\n                  m: 0,\n                  zIndex: 1\n                },\n                children: PERSONS.map(person => {\n                  const info = eventsByPerson[person];\n                  if (info) {\n                    const {\n                      event,\n                      isStart,\n                      isEnd\n                    } = info;\n                    // height 계산\n                    const slotStart = getSlotDate(selectedDate, timeSlot);\n                    const nextSlot = getSlotDate(selectedDate, `${(parseInt(timeSlot.split(':')[0]) + 1).toString().padStart(2, '0')}:00`);\n                    const [startStr, endStr] = event.timeSlot.split('-');\n                    const eventStart = getSlotDate(selectedDate, startStr);\n                    const eventEnd = getSlotDate(selectedDate, endStr);\n                    let height = SLOT_HEIGHT;\n                    let top = 0;\n                    if (isStart && isEnd) {\n                      height = differenceInMinutes(eventEnd, eventStart) / 60 * SLOT_HEIGHT;\n                      top = differenceInMinutes(eventStart, slotStart) / 60 * SLOT_HEIGHT;\n                    } else if (isStart) {\n                      height = differenceInMinutes(nextSlot, eventStart) / 60 * SLOT_HEIGHT;\n                      top = differenceInMinutes(eventStart, slotStart) / 60 * SLOT_HEIGHT;\n                    } else if (isEnd) {\n                      height = differenceInMinutes(eventEnd, slotStart) / 60 * SLOT_HEIGHT;\n                    } else {\n                      height = SLOT_HEIGHT;\n                    }\n                    // 30분 시작일 경우 Paper/텍스트 Box의 height/top을 50%/50%로 조정\n                    let paperTop = 0;\n                    let paperHeight = '100%';\n                    if (isStart) {\n                      const [startHour, startMinute] = event.timeSlot.split('-')[0].split(':');\n                      if (parseInt(startMinute, 10) === 30) {\n                        paperTop = SLOT_HEIGHT / 2;\n                        paperHeight = '50%';\n                      }\n                    }\n                    // 활동별 이모지 매핑\n                    const activityEmojis = {\n                      '피아노': '🎹',\n                      '삼성레포츠 수영': '🏊',\n                      '서리풀수영장': '🏊',\n                      '소미아트': '🎨',\n                      '구몬': '📒',\n                      '축구대표팀': '⚽',\n                      '축구': '⚽',\n                      '축구1:1': '⚽',\n                      '방문과외': '👩‍🏫',\n                      '발레1': '🩰',\n                      '발레2': '🩰',\n                      '발레3': '🩰'\n                    };\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        width: '50%',\n                        height: `${height}px`,\n                        position: 'relative',\n                        p: 0,\n                        m: 0\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Paper, {\n                        sx: {\n                          bgcolor: person === '조운' ? '#b3e5fc' : '#f8bbd0',\n                          height: paperHeight,\n                          minHeight: '24px',\n                          width: '100%',\n                          borderRadius: 3,\n                          boxShadow: '0 2px 8px 0 #e1bee7',\n                          border: 'none',\n                          position: 'absolute',\n                          top: paperTop,\n                          left: 0,\n                          m: 0,\n                          zIndex: 1,\n                          overflow: 'visible',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center'\n                        },\n                        children: isStart && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                            size: \"small\",\n                            color: \"error\",\n                            onClick: () => onDeleteEvent(event.id),\n                            sx: {\n                              position: 'absolute',\n                              top: 4,\n                              right: 4,\n                              zIndex: 2,\n                              bgcolor: '#fff',\n                              borderRadius: 2\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              component: \"span\",\n                              sx: {\n                                fontSize: 18,\n                                fontWeight: 'bold',\n                                lineHeight: 1\n                              },\n                              children: \"\\u274C\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 243,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              p: 1,\n                              pr: 4,\n                              width: '100%',\n                              height: '100%',\n                              overflow: 'visible',\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle1\",\n                              sx: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: 1,\n                                fontWeight: 700,\n                                fontSize: 18\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                style: {\n                                  fontSize: 22\n                                },\n                                children: activityEmojis[event.title] || ''\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 255,\n                                columnNumber: 39\n                              }, this), event.title, /*#__PURE__*/_jsxDEV(Chip, {\n                                label: person,\n                                size: \"small\",\n                                sx: {\n                                  ml: 1,\n                                  mr: 1,\n                                  bgcolor: person === '조운' ? '#90caf9' : '#f48fb1',\n                                  color: '#222',\n                                  fontWeight: 700,\n                                  borderRadius: 2,\n                                  px: 1,\n                                  fontSize: 15\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 257,\n                                columnNumber: 39\n                              }, this), event.timeSlot]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 254,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 245,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 29\n                      }, this)\n                    }, event.id + '-' + timeSlot, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 27\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        width: '50%',\n                        height: `${SLOT_HEIGHT}px`,\n                        p: 0,\n                        m: 0,\n                        position: 'relative',\n                        zIndex: 1,\n                        background: 'transparent'\n                      }\n                    }, person + '-' + timeSlot, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 32\n                    }, this);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, timeSlot, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","Paper","Box","Typography","Chip","IconButton","DateCalendar","getDay","differenceInMinutes","TodoList","format","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","SLOT_HEIGHT","PERSONS","Calendar","events","onDeleteEvent","_s","selectedDate","setSelectedDate","useState","Date","getEventsForDate","date","dayOfWeek","filter","event","isInPeriod","start","end","isOnDay","includes","sort","a","b","timeA","timeSlot","split","timeB","localeCompare","timeSlots","Array","from","length","_","i","toString","padStart","filteredEvents","getSlotDate","baseDate","time","hour","minute","d","setHours","Number","getEventsInSlotByPerson","slotTime","slotStart","nextSlot","parseInt","result","forEach","startStr","endStr","eventStart","eventEnd","isStart","isEnd","minutes","person","height","getSlotBoxRadius","getKoreanDay","days","helpers","day","name","elevation","sx","p","mt","background","children","display","gap","flexDirection","alignItems","minWidth","ml","value","onChange","newDate","fileName","_jsxFileName","lineNumber","columnNumber","width","month","flex","variant","component","gutterBottom","align","fontWeight","color","letterSpacing","mb","map","helper","idx","emojis","bgcolor","borderRadius","px","py","fontSize","label","eventsByPerson","slotHeights","info","maxSlotHeight","Math","max","borderLeft","borderRight","borderBottom","position","minHeight","textAlign","pt","zIndex","m","mr","top","paperTop","paperHeight","startHour","startMinute","activityEmojis","boxShadow","border","left","overflow","justifyContent","size","onClick","id","right","lineHeight","pr","style","title","_c","$RefreshReg$"],"sources":["C:/Users/jycho/OneDrive/Desktop/웹앱제작중/vacation-scheduler/src/components/Calendar.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Paper, Box, Typography, Button, Chip, IconButton } from '@mui/material';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport { Schedule } from '../types';\r\nimport { format, getDay, differenceInMinutes } from 'date-fns';\r\nimport TodoList from './TodoList';\r\nimport { format as formatDate } from 'date-fns';\r\n\r\ninterface CalendarProps {\r\n  events: Schedule[];\r\n  onDeleteEvent: (eventId: string) => void;\r\n}\r\n\r\nconst SLOT_HEIGHT = 48; // 1시간 슬롯의 높이(px)\r\nconst PERSONS = ['조운', '지윤'] as const;\r\n\r\ntype Person = typeof PERSONS[number];\r\n\r\nfunction Calendar({ events, onDeleteEvent }: CalendarProps) {\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(new Date());\r\n\r\n  const getEventsForDate = (date: Date): Schedule[] => {\r\n    const dayOfWeek = getDay(date); // 0: 일요일, 1: 월요일, ..., 6: 토요일\r\n    return events.filter((event: Schedule) => {\r\n      // 해당 날짜가 이벤트 기간 내에 있는지 확인\r\n      const isInPeriod = date >= event.start && date <= event.end;\r\n      // 해당 요일에 수업이 있는지 확인\r\n      const isOnDay = event.dayOfWeek.includes(dayOfWeek);\r\n      return isInPeriod && isOnDay;\r\n    }).sort((a: Schedule, b: Schedule) => {\r\n      const timeA = a.timeSlot.split('-')[0];\r\n      const timeB = b.timeSlot.split('-')[0];\r\n      return timeA.localeCompare(timeB);\r\n    });\r\n  };\r\n\r\n  // 오전 8시부터 저녁 9시까지 1시간 단위로 시간대 생성\r\n  const timeSlots = Array.from({ length: 14 }, (_, i) =>\r\n    `${(i + 8).toString().padStart(2, '0')}:00`\r\n  );\r\n\r\n  const filteredEvents = selectedDate ? getEventsForDate(selectedDate) : [];\r\n\r\n  // 시간 문자열(HH:MM)을 Date 객체로 변환 (선택한 날짜 기준)\r\n  const getSlotDate = (baseDate: Date, time: string) => {\r\n    const [hour, minute] = time.split(':');\r\n    const d = new Date(baseDate);\r\n    d.setHours(Number(hour), Number(minute), 0, 0);\r\n    return d;\r\n  };\r\n\r\n  // 각 슬롯마다 해당 슬롯이 일정의 범위(시작~끝)에 걸쳐 있으면 반환\r\n  const getEventsInSlotByPerson = (slotTime: string) => {\r\n    const slotStart = getSlotDate(selectedDate!, slotTime);\r\n    const nextSlot = getSlotDate(selectedDate!, `${(parseInt(slotTime.split(':')[0]) + 1).toString().padStart(2, '0')}:00`);\r\n    const result: { [person in Person]: { event: Schedule, isStart: boolean, isEnd: boolean, height: number } | null } = { '조운': null, '지윤': null };\r\n    filteredEvents.forEach(event => {\r\n      const [startStr, endStr] = event.timeSlot.split('-');\r\n      const eventStart = getSlotDate(selectedDate!, startStr);\r\n      const eventEnd = getSlotDate(selectedDate!, endStr);\r\n      // 이 슬롯이 일정의 범위에 걸쳐 있으면\r\n      if (slotStart < eventEnd && nextSlot > eventStart) {\r\n        const isStart = eventStart >= slotStart && eventStart < nextSlot;\r\n        const isEnd = eventEnd > slotStart && eventEnd <= nextSlot;\r\n        // 이 슬롯에서 차지하는 높이 계산\r\n        let minutes = 60;\r\n        if (isStart && isEnd) {\r\n          minutes = differenceInMinutes(eventEnd, eventStart);\r\n        } else if (isStart) {\r\n          minutes = differenceInMinutes(nextSlot, eventStart);\r\n        } else if (isEnd) {\r\n          minutes = differenceInMinutes(eventEnd, slotStart);\r\n        }\r\n        result[event.person as Person] = { event, isStart, isEnd, height: (minutes / 60) * SLOT_HEIGHT };\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  // borderRadius 스타일 (시작/끝/한칸짜리)\r\n  const getSlotBoxRadius = (isStart: boolean, isEnd: boolean) => {\r\n    if (isStart && isEnd) return '12px';\r\n    if (isStart) return '12px 12px 0 0';\r\n    if (isEnd) return '0 0 12px 12px';\r\n    return '0';\r\n  };\r\n\r\n  // 요일 한글 변환 함수\r\n  const getKoreanDay = (date: Date) => {\r\n    const days = ['일', '월', '화', '수', '목', '금', '토'];\r\n    return days[getDay(date)];\r\n  };\r\n\r\n  // 도우미 안내표\r\n  const helpers = [\r\n    { day: '월요일', name: '엄마' },\r\n    { day: '화요일', name: '친할머니' },\r\n    { day: '수요일', name: '아빠' },\r\n    { day: '목요일', name: '이모님' },\r\n    { day: '금요일', name: '외할머니' },\r\n  ];\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 2, mt: 2, background: 'linear-gradient(135deg, #fffde4 0%, #f9f6ff 100%)' }}>\r\n      <Box sx={{ display: 'flex', gap: 2 }}>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', minWidth: 320, ml: 2 }}>\r\n          <DateCalendar\r\n            value={selectedDate}\r\n            onChange={(newDate: Date | null) => setSelectedDate(newDate)}\r\n          />\r\n          {/* 선택된 날짜의 To do list */}\r\n          {selectedDate && (\r\n            <Box sx={{ mt: 2, width: '100%' }}>\r\n              <TodoList person=\"조운\" date={formatDate(selectedDate, 'yyyy-MM-dd')} month={formatDate(selectedDate, 'yyyy-MM')} />\r\n              <TodoList person=\"지윤\" date={formatDate(selectedDate, 'yyyy-MM-dd')} month={formatDate(selectedDate, 'yyyy-MM')} />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        <Box sx={{ flex: 1, p: 2 }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\" sx={{ fontWeight: 900, color: '#7c4dff', letterSpacing: 1 }}>\r\n            2025년 조운, 지윤 여름방학 스케줄 🌈\r\n          </Typography>\r\n          {/* 도우미 안내표 */}\r\n          <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n            {helpers.map((helper, idx) => {\r\n              const emojis = ['👩‍👧', '👵', '👨‍👧', '👩‍🦰', '👵'];\r\n              return (\r\n                <Box key={helper.day} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', bgcolor: ['#ffe0b2', '#b3e5fc', '#c8e6c9', '#f8bbd0', '#fff9c4'][idx], borderRadius: 2, px: 2, py: 0.5, fontSize: 15, minWidth: 70 }}>\r\n                  <Typography sx={{ fontWeight: 700, fontSize: 15 }}>{emojis[idx]} {helper.day}</Typography>\r\n                  <Typography sx={{ fontSize: 14 }}>{helper.name}</Typography>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n          {/* 상단에 조운/지윤 컬러 라벨 */}\r\n          <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n            <Chip label=\"조운\" sx={{ bgcolor: '#b3e5fc', color: '#222', fontWeight: 700, borderRadius: 2, px: 2, fontSize: 15 }} />\r\n            <Chip label=\"지윤\" sx={{ bgcolor: '#f8bbd0', color: '#222', fontWeight: 700, borderRadius: 2, px: 2, fontSize: 15 }} />\r\n          </Box>\r\n          <Box>\r\n            {timeSlots.map((timeSlot) => {\r\n              const eventsByPerson = getEventsInSlotByPerson(timeSlot);\r\n              // 각 인물별로 해당 슬롯에서 시작하는 일정의 height를 구함\r\n              const slotHeights = PERSONS.map(person => {\r\n                const info = eventsByPerson[person];\r\n                if (info && info.isStart) {\r\n                  // 시작 슬롯이면 height 반환\r\n                  const event = info.event;\r\n                  const [startStr, endStr] = event.timeSlot.split('-');\r\n                  const eventStart = getSlotDate(selectedDate!, startStr);\r\n                  const eventEnd = getSlotDate(selectedDate!, endStr);\r\n                  return (differenceInMinutes(eventEnd, eventStart) / 60) * SLOT_HEIGHT;\r\n                }\r\n                return SLOT_HEIGHT;\r\n              });\r\n              const maxSlotHeight = Math.max(...slotHeights, SLOT_HEIGHT);\r\n              return (\r\n                <Box key={timeSlot} sx={{ mb: 0, display: 'flex', alignItems: 'flex-start', borderLeft: '1px solid #e0e0e0', borderRight: '1px solid #e0e0e0', borderBottom: '1px solid #e0e0e0', position: 'relative', p: 0, minHeight: `${SLOT_HEIGHT}px` }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ width: 60, minWidth: 60, textAlign: 'right', pt: '12px', zIndex: 2, background: '#fff', m: 0, p: 0, mr: 2 }}>\r\n                    {timeSlot}\r\n                  </Typography>\r\n                  <Box sx={{ flex: 1, ml: 0, display: 'flex', gap: 0, position: 'relative', p: 0, m: 0, zIndex: 1 }}>\r\n                    {PERSONS.map(person => {\r\n                      const info = eventsByPerson[person];\r\n                      if (info) {\r\n                        const { event, isStart, isEnd } = info;\r\n                        // height 계산\r\n                        const slotStart = getSlotDate(selectedDate!, timeSlot);\r\n                        const nextSlot = getSlotDate(selectedDate!, `${(parseInt(timeSlot.split(':')[0]) + 1).toString().padStart(2, '0')}:00`);\r\n                        const [startStr, endStr] = event.timeSlot.split('-');\r\n                        const eventStart = getSlotDate(selectedDate!, startStr);\r\n                        const eventEnd = getSlotDate(selectedDate!, endStr);\r\n                        let height = SLOT_HEIGHT;\r\n                        let top = 0;\r\n                        if (isStart && isEnd) {\r\n                          height = (differenceInMinutes(eventEnd, eventStart) / 60) * SLOT_HEIGHT;\r\n                          top = (differenceInMinutes(eventStart, slotStart) / 60) * SLOT_HEIGHT;\r\n                        } else if (isStart) {\r\n                          height = (differenceInMinutes(nextSlot, eventStart) / 60) * SLOT_HEIGHT;\r\n                          top = (differenceInMinutes(eventStart, slotStart) / 60) * SLOT_HEIGHT;\r\n                        } else if (isEnd) {\r\n                          height = (differenceInMinutes(eventEnd, slotStart) / 60) * SLOT_HEIGHT;\r\n                        } else {\r\n                          height = SLOT_HEIGHT;\r\n                        }\r\n                        // 30분 시작일 경우 Paper/텍스트 Box의 height/top을 50%/50%로 조정\r\n                        let paperTop = 0;\r\n                        let paperHeight = '100%';\r\n                        if (isStart) {\r\n                          const [startHour, startMinute] = event.timeSlot.split('-')[0].split(':');\r\n                          if (parseInt(startMinute, 10) === 30) {\r\n                            paperTop = SLOT_HEIGHT / 2;\r\n                            paperHeight = '50%';\r\n                          }\r\n                        }\r\n                        // 활동별 이모지 매핑\r\n                        const activityEmojis: { [key: string]: string } = {\r\n                          '피아노': '🎹',\r\n                          '삼성레포츠 수영': '🏊',\r\n                          '서리풀수영장': '🏊',\r\n                          '소미아트': '🎨',\r\n                          '구몬': '📒',\r\n                          '축구대표팀': '⚽',\r\n                          '축구': '⚽',\r\n                          '축구1:1': '⚽',\r\n                          '방문과외': '👩‍🏫',\r\n                          '발레1': '🩰',\r\n                          '발레2': '🩰',\r\n                          '발레3': '🩰',\r\n                        };\r\n                        return (\r\n                          <Box key={event.id + '-' + timeSlot} sx={{ width: '50%', height: `${height}px`, position: 'relative', p: 0, m: 0 }}>\r\n                            {/* 항상 배경용 Paper 렌더링 */}\r\n                            <Paper\r\n                              sx={{\r\n                                bgcolor: person === '조운' ? '#b3e5fc' : '#f8bbd0',\r\n                                height: paperHeight,\r\n                                minHeight: '24px',\r\n                                width: '100%',\r\n                                borderRadius: 3,\r\n                                boxShadow: '0 2px 8px 0 #e1bee7',\r\n                                border: 'none',\r\n                                position: 'absolute',\r\n                                top: paperTop,\r\n                                left: 0,\r\n                                m: 0,\r\n                                zIndex: 1,\r\n                                overflow: 'visible',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              {/* 삭제 버튼은 isStart일 때만, Paper 내부 오른쪽 상단에 */}\r\n                              {isStart && (\r\n                                <>\r\n                                  <IconButton\r\n                                    size=\"small\"\r\n                                    color=\"error\"\r\n                                    onClick={() => onDeleteEvent(event.id)}\r\n                                    sx={{ position: 'absolute', top: 4, right: 4, zIndex: 2, bgcolor: '#fff', borderRadius: 2 }}\r\n                                  >\r\n                                    <Typography component=\"span\" sx={{ fontSize: 18, fontWeight: 'bold', lineHeight: 1 }}>❌</Typography>\r\n                                  </IconButton>\r\n                                  <Box sx={{\r\n                                    p: 1, pr: 4,\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    overflow: 'visible',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                  }}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ display: 'flex', alignItems: 'center', gap: 1, fontWeight: 700, fontSize: 18 }}>\r\n                                      <span style={{ fontSize: 22 }}>{activityEmojis[event.title] || ''}</span>\r\n                                      {event.title}\r\n                                      <Chip\r\n                                        label={person}\r\n                                        size=\"small\"\r\n                                        sx={{ ml: 1, mr: 1, bgcolor: person === '조운' ? '#90caf9' : '#f48fb1', color: '#222', fontWeight: 700, borderRadius: 2, px: 1, fontSize: 15 }}\r\n                                      />\r\n                                      {event.timeSlot}\r\n                                    </Typography>\r\n                                  </Box>\r\n                                </>\r\n                              )}\r\n                            </Paper>\r\n                          </Box>\r\n                        );\r\n                      } else {\r\n                        return <Box key={person + '-' + timeSlot} sx={{ width: '50%', height: `${SLOT_HEIGHT}px`, p: 0, m: 0, position: 'relative', zIndex: 1, background: 'transparent' }} />;\r\n                      }\r\n                    })}\r\n                  </Box>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Calendar; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAUC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAChF,SAASC,YAAY,QAAQ,kCAAkC;AAE/D,SAAiBC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC9D,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,MAAM,IAAIC,UAAU,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOhD,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;AACxB,MAAMC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,CAAU;AAIrC,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC;AAA6B,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvB,KAAK,CAACwB,QAAQ,CAAc,IAAIC,IAAI,CAAC,CAAC,CAAC;EAE/E,MAAMC,gBAAgB,GAAIC,IAAU,IAAiB;IACnD,MAAMC,SAAS,GAAGrB,MAAM,CAACoB,IAAI,CAAC,CAAC,CAAC;IAChC,OAAOR,MAAM,CAACU,MAAM,CAAEC,KAAe,IAAK;MACxC;MACA,MAAMC,UAAU,GAAGJ,IAAI,IAAIG,KAAK,CAACE,KAAK,IAAIL,IAAI,IAAIG,KAAK,CAACG,GAAG;MAC3D;MACA,MAAMC,OAAO,GAAGJ,KAAK,CAACF,SAAS,CAACO,QAAQ,CAACP,SAAS,CAAC;MACnD,OAAOG,UAAU,IAAIG,OAAO;IAC9B,CAAC,CAAC,CAACE,IAAI,CAAC,CAACC,CAAW,EAAEC,CAAW,KAAK;MACpC,MAAMC,KAAK,GAAGF,CAAC,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtC,MAAMC,KAAK,GAAGJ,CAAC,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtC,OAAOF,KAAK,CAACI,aAAa,CAACD,KAAK,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAChD,GAAG,CAACA,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KACxC,CAAC;EAED,MAAMC,cAAc,GAAG9B,YAAY,GAAGI,gBAAgB,CAACJ,YAAY,CAAC,GAAG,EAAE;;EAEzE;EACA,MAAM+B,WAAW,GAAGA,CAACC,QAAc,EAAEC,IAAY,KAAK;IACpD,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC,GAAGF,IAAI,CAACd,KAAK,CAAC,GAAG,CAAC;IACtC,MAAMiB,CAAC,GAAG,IAAIjC,IAAI,CAAC6B,QAAQ,CAAC;IAC5BI,CAAC,CAACC,QAAQ,CAACC,MAAM,CAACJ,IAAI,CAAC,EAAEI,MAAM,CAACH,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9C,OAAOC,CAAC;EACV,CAAC;;EAED;EACA,MAAMG,uBAAuB,GAAIC,QAAgB,IAAK;IACpD,MAAMC,SAAS,GAAGV,WAAW,CAAC/B,YAAY,EAAGwC,QAAQ,CAAC;IACtD,MAAME,QAAQ,GAAGX,WAAW,CAAC/B,YAAY,EAAG,GAAG,CAAC2C,QAAQ,CAACH,QAAQ,CAACrB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAES,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;IACvH,MAAMe,MAA4G,GAAG;MAAE,IAAI,EAAE,IAAI;MAAE,IAAI,EAAE;IAAK,CAAC;IAC/Id,cAAc,CAACe,OAAO,CAACrC,KAAK,IAAI;MAC9B,MAAM,CAACsC,QAAQ,EAAEC,MAAM,CAAC,GAAGvC,KAAK,CAACU,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;MACpD,MAAM6B,UAAU,GAAGjB,WAAW,CAAC/B,YAAY,EAAG8C,QAAQ,CAAC;MACvD,MAAMG,QAAQ,GAAGlB,WAAW,CAAC/B,YAAY,EAAG+C,MAAM,CAAC;MACnD;MACA,IAAIN,SAAS,GAAGQ,QAAQ,IAAIP,QAAQ,GAAGM,UAAU,EAAE;QACjD,MAAME,OAAO,GAAGF,UAAU,IAAIP,SAAS,IAAIO,UAAU,GAAGN,QAAQ;QAChE,MAAMS,KAAK,GAAGF,QAAQ,GAAGR,SAAS,IAAIQ,QAAQ,IAAIP,QAAQ;QAC1D;QACA,IAAIU,OAAO,GAAG,EAAE;QAChB,IAAIF,OAAO,IAAIC,KAAK,EAAE;UACpBC,OAAO,GAAGlE,mBAAmB,CAAC+D,QAAQ,EAAED,UAAU,CAAC;QACrD,CAAC,MAAM,IAAIE,OAAO,EAAE;UAClBE,OAAO,GAAGlE,mBAAmB,CAACwD,QAAQ,EAAEM,UAAU,CAAC;QACrD,CAAC,MAAM,IAAIG,KAAK,EAAE;UAChBC,OAAO,GAAGlE,mBAAmB,CAAC+D,QAAQ,EAAER,SAAS,CAAC;QACpD;QACAG,MAAM,CAACpC,KAAK,CAAC6C,MAAM,CAAW,GAAG;UAAE7C,KAAK;UAAE0C,OAAO;UAAEC,KAAK;UAAEG,MAAM,EAAGF,OAAO,GAAG,EAAE,GAAI1D;QAAY,CAAC;MAClG;IACF,CAAC,CAAC;IACF,OAAOkD,MAAM;EACf,CAAC;;EAED;EACA,MAAMW,gBAAgB,GAAGA,CAACL,OAAgB,EAAEC,KAAc,KAAK;IAC7D,IAAID,OAAO,IAAIC,KAAK,EAAE,OAAO,MAAM;IACnC,IAAID,OAAO,EAAE,OAAO,eAAe;IACnC,IAAIC,KAAK,EAAE,OAAO,eAAe;IACjC,OAAO,GAAG;EACZ,CAAC;;EAED;EACA,MAAMK,YAAY,GAAInD,IAAU,IAAK;IACnC,MAAMoD,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAChD,OAAOA,IAAI,CAACxE,MAAM,CAACoB,IAAI,CAAC,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMqD,OAAO,GAAG,CACd;IAAEC,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC1B;IAAED,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC5B;IAAED,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC1B;IAAED,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAM,CAAC,EAC3B;IAAED,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,CAC7B;EAED,oBACErE,OAAA,CAACZ,KAAK;IAACkF,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAoD,CAAE;IAAAC,QAAA,eACxG3E,OAAA,CAACX,GAAG;MAACkF,EAAE,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAE,CAAE;MAAAF,QAAA,gBACnC3E,OAAA,CAACX,GAAG;QAACkF,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEE,aAAa,EAAE,QAAQ;UAAEC,UAAU,EAAE,YAAY;UAAEC,QAAQ,EAAE,GAAG;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAN,QAAA,gBACpG3E,OAAA,CAACP,YAAY;UACXyF,KAAK,EAAEzE,YAAa;UACpB0E,QAAQ,EAAGC,OAAoB,IAAK1E,eAAe,CAAC0E,OAAO;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,EAED/E,YAAY,iBACXT,OAAA,CAACX,GAAG;UAACkF,EAAE,EAAE;YAAEE,EAAE,EAAE,CAAC;YAAEgB,KAAK,EAAE;UAAO,CAAE;UAAAd,QAAA,gBAChC3E,OAAA,CAACJ,QAAQ;YAACkE,MAAM,EAAC,cAAI;YAAChD,IAAI,EAAEhB,UAAU,CAACW,YAAY,EAAE,YAAY,CAAE;YAACiF,KAAK,EAAE5F,UAAU,CAACW,YAAY,EAAE,SAAS;UAAE;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClHxF,OAAA,CAACJ,QAAQ;YAACkE,MAAM,EAAC,cAAI;YAAChD,IAAI,EAAEhB,UAAU,CAACW,YAAY,EAAE,YAAY,CAAE;YAACiF,KAAK,EAAE5F,UAAU,CAACW,YAAY,EAAE,SAAS;UAAE;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/G,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNxF,OAAA,CAACX,GAAG;QAACkF,EAAE,EAAE;UAAEoB,IAAI,EAAE,CAAC;UAAEnB,CAAC,EAAE;QAAE,CAAE;QAAAG,QAAA,gBACzB3E,OAAA,CAACV,UAAU;UAACsG,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,YAAY;UAACC,KAAK,EAAC,QAAQ;UAACxB,EAAE,EAAE;YAAEyB,UAAU,EAAE,GAAG;YAAEC,KAAK,EAAE,SAAS;YAAEC,aAAa,EAAE;UAAE,CAAE;UAAAvB,QAAA,EAAC;QAEjI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAEbxF,OAAA,CAACX,GAAG;UAACkF,EAAE,EAAE;YAAEK,OAAO,EAAE,MAAM;YAAEC,GAAG,EAAE,CAAC;YAAEsB,EAAE,EAAE;UAAE,CAAE;UAAAxB,QAAA,EACzCR,OAAO,CAACiC,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;YAC5B,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;YACtD,oBACEvG,OAAA,CAACX,GAAG;cAAkBkF,EAAE,EAAE;gBAAEK,OAAO,EAAE,MAAM;gBAAEE,aAAa,EAAE,QAAQ;gBAAEC,UAAU,EAAE,QAAQ;gBAAEyB,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAACF,GAAG,CAAC;gBAAEG,YAAY,EAAE,CAAC;gBAAEC,EAAE,EAAE,CAAC;gBAAEC,EAAE,EAAE,GAAG;gBAAEC,QAAQ,EAAE,EAAE;gBAAE5B,QAAQ,EAAE;cAAG,CAAE;cAAAL,QAAA,gBAC/N3E,OAAA,CAACV,UAAU;gBAACiF,EAAE,EAAE;kBAAEyB,UAAU,EAAE,GAAG;kBAAEY,QAAQ,EAAE;gBAAG,CAAE;gBAAAjC,QAAA,GAAE4B,MAAM,CAACD,GAAG,CAAC,EAAC,GAAC,EAACD,MAAM,CAACjC,GAAG;cAAA;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eAC1FxF,OAAA,CAACV,UAAU;gBAACiF,EAAE,EAAE;kBAAEqC,QAAQ,EAAE;gBAAG,CAAE;gBAAAjC,QAAA,EAAE0B,MAAM,CAAChC;cAAI;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC;YAAA,GAFpDa,MAAM,CAACjC,GAAG;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGf,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxF,OAAA,CAACX,GAAG;UAACkF,EAAE,EAAE;YAAEK,OAAO,EAAE,MAAM;YAAEC,GAAG,EAAE,CAAC;YAAEsB,EAAE,EAAE;UAAE,CAAE;UAAAxB,QAAA,gBAC1C3E,OAAA,CAACT,IAAI;YAACsH,KAAK,EAAC,cAAI;YAACtC,EAAE,EAAE;cAAEiC,OAAO,EAAE,SAAS;cAAEP,KAAK,EAAE,MAAM;cAAED,UAAU,EAAE,GAAG;cAAES,YAAY,EAAE,CAAC;cAAEC,EAAE,EAAE,CAAC;cAAEE,QAAQ,EAAE;YAAG;UAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrHxF,OAAA,CAACT,IAAI;YAACsH,KAAK,EAAC,cAAI;YAACtC,EAAE,EAAE;cAAEiC,OAAO,EAAE,SAAS;cAAEP,KAAK,EAAE,MAAM;cAAED,UAAU,EAAE,GAAG;cAAES,YAAY,EAAE,CAAC;cAAEC,EAAE,EAAE,CAAC;cAAEE,QAAQ,EAAE;YAAG;UAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClH,CAAC,eACNxF,OAAA,CAACX,GAAG;UAAAsF,QAAA,EACD5C,SAAS,CAACqE,GAAG,CAAEzE,QAAQ,IAAK;YAC3B,MAAMmF,cAAc,GAAG9D,uBAAuB,CAACrB,QAAQ,CAAC;YACxD;YACA,MAAMoF,WAAW,GAAG3G,OAAO,CAACgG,GAAG,CAACtC,MAAM,IAAI;cACxC,MAAMkD,IAAI,GAAGF,cAAc,CAAChD,MAAM,CAAC;cACnC,IAAIkD,IAAI,IAAIA,IAAI,CAACrD,OAAO,EAAE;gBACxB;gBACA,MAAM1C,KAAK,GAAG+F,IAAI,CAAC/F,KAAK;gBACxB,MAAM,CAACsC,QAAQ,EAAEC,MAAM,CAAC,GAAGvC,KAAK,CAACU,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;gBACpD,MAAM6B,UAAU,GAAGjB,WAAW,CAAC/B,YAAY,EAAG8C,QAAQ,CAAC;gBACvD,MAAMG,QAAQ,GAAGlB,WAAW,CAAC/B,YAAY,EAAG+C,MAAM,CAAC;gBACnD,OAAQ7D,mBAAmB,CAAC+D,QAAQ,EAAED,UAAU,CAAC,GAAG,EAAE,GAAItD,WAAW;cACvE;cACA,OAAOA,WAAW;YACpB,CAAC,CAAC;YACF,MAAM8G,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,WAAW,EAAE5G,WAAW,CAAC;YAC3D,oBACEH,OAAA,CAACX,GAAG;cAAgBkF,EAAE,EAAE;gBAAE4B,EAAE,EAAE,CAAC;gBAAEvB,OAAO,EAAE,MAAM;gBAAEG,UAAU,EAAE,YAAY;gBAAEqC,UAAU,EAAE,mBAAmB;gBAAEC,WAAW,EAAE,mBAAmB;gBAAEC,YAAY,EAAE,mBAAmB;gBAAEC,QAAQ,EAAE,UAAU;gBAAE/C,CAAC,EAAE,CAAC;gBAAEgD,SAAS,EAAE,GAAGrH,WAAW;cAAK,CAAE;cAAAwE,QAAA,gBAC5O3E,OAAA,CAACV,UAAU;gBAACsG,OAAO,EAAC,WAAW;gBAACK,KAAK,EAAC,gBAAgB;gBAACH,YAAY;gBAACvB,EAAE,EAAE;kBAAEkB,KAAK,EAAE,EAAE;kBAAET,QAAQ,EAAE,EAAE;kBAAEyC,SAAS,EAAE,OAAO;kBAAEC,EAAE,EAAE,MAAM;kBAAEC,MAAM,EAAE,CAAC;kBAAEjD,UAAU,EAAE,MAAM;kBAAEkD,CAAC,EAAE,CAAC;kBAAEpD,CAAC,EAAE,CAAC;kBAAEqD,EAAE,EAAE;gBAAE,CAAE;gBAAAlD,QAAA,EACnLhD;cAAQ;gBAAA0D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACbxF,OAAA,CAACX,GAAG;gBAACkF,EAAE,EAAE;kBAAEoB,IAAI,EAAE,CAAC;kBAAEV,EAAE,EAAE,CAAC;kBAAEL,OAAO,EAAE,MAAM;kBAAEC,GAAG,EAAE,CAAC;kBAAE0C,QAAQ,EAAE,UAAU;kBAAE/C,CAAC,EAAE,CAAC;kBAAEoD,CAAC,EAAE,CAAC;kBAAED,MAAM,EAAE;gBAAE,CAAE;gBAAAhD,QAAA,EAC/FvE,OAAO,CAACgG,GAAG,CAACtC,MAAM,IAAI;kBACrB,MAAMkD,IAAI,GAAGF,cAAc,CAAChD,MAAM,CAAC;kBACnC,IAAIkD,IAAI,EAAE;oBACR,MAAM;sBAAE/F,KAAK;sBAAE0C,OAAO;sBAAEC;oBAAM,CAAC,GAAGoD,IAAI;oBACtC;oBACA,MAAM9D,SAAS,GAAGV,WAAW,CAAC/B,YAAY,EAAGkB,QAAQ,CAAC;oBACtD,MAAMwB,QAAQ,GAAGX,WAAW,CAAC/B,YAAY,EAAG,GAAG,CAAC2C,QAAQ,CAACzB,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAES,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;oBACvH,MAAM,CAACiB,QAAQ,EAAEC,MAAM,CAAC,GAAGvC,KAAK,CAACU,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;oBACpD,MAAM6B,UAAU,GAAGjB,WAAW,CAAC/B,YAAY,EAAG8C,QAAQ,CAAC;oBACvD,MAAMG,QAAQ,GAAGlB,WAAW,CAAC/B,YAAY,EAAG+C,MAAM,CAAC;oBACnD,IAAIO,MAAM,GAAG5D,WAAW;oBACxB,IAAI2H,GAAG,GAAG,CAAC;oBACX,IAAInE,OAAO,IAAIC,KAAK,EAAE;sBACpBG,MAAM,GAAIpE,mBAAmB,CAAC+D,QAAQ,EAAED,UAAU,CAAC,GAAG,EAAE,GAAItD,WAAW;sBACvE2H,GAAG,GAAInI,mBAAmB,CAAC8D,UAAU,EAAEP,SAAS,CAAC,GAAG,EAAE,GAAI/C,WAAW;oBACvE,CAAC,MAAM,IAAIwD,OAAO,EAAE;sBAClBI,MAAM,GAAIpE,mBAAmB,CAACwD,QAAQ,EAAEM,UAAU,CAAC,GAAG,EAAE,GAAItD,WAAW;sBACvE2H,GAAG,GAAInI,mBAAmB,CAAC8D,UAAU,EAAEP,SAAS,CAAC,GAAG,EAAE,GAAI/C,WAAW;oBACvE,CAAC,MAAM,IAAIyD,KAAK,EAAE;sBAChBG,MAAM,GAAIpE,mBAAmB,CAAC+D,QAAQ,EAAER,SAAS,CAAC,GAAG,EAAE,GAAI/C,WAAW;oBACxE,CAAC,MAAM;sBACL4D,MAAM,GAAG5D,WAAW;oBACtB;oBACA;oBACA,IAAI4H,QAAQ,GAAG,CAAC;oBAChB,IAAIC,WAAW,GAAG,MAAM;oBACxB,IAAIrE,OAAO,EAAE;sBACX,MAAM,CAACsE,SAAS,EAAEC,WAAW,CAAC,GAAGjH,KAAK,CAACU,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;sBACxE,IAAIwB,QAAQ,CAAC8E,WAAW,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE;wBACpCH,QAAQ,GAAG5H,WAAW,GAAG,CAAC;wBAC1B6H,WAAW,GAAG,KAAK;sBACrB;oBACF;oBACA;oBACA,MAAMG,cAAyC,GAAG;sBAChD,KAAK,EAAE,IAAI;sBACX,UAAU,EAAE,IAAI;sBAChB,QAAQ,EAAE,IAAI;sBACd,MAAM,EAAE,IAAI;sBACZ,IAAI,EAAE,IAAI;sBACV,OAAO,EAAE,GAAG;sBACZ,IAAI,EAAE,GAAG;sBACT,OAAO,EAAE,GAAG;sBACZ,MAAM,EAAE,OAAO;sBACf,KAAK,EAAE,IAAI;sBACX,KAAK,EAAE,IAAI;sBACX,KAAK,EAAE;oBACT,CAAC;oBACD,oBACEnI,OAAA,CAACX,GAAG;sBAAiCkF,EAAE,EAAE;wBAAEkB,KAAK,EAAE,KAAK;wBAAE1B,MAAM,EAAE,GAAGA,MAAM,IAAI;wBAAEwD,QAAQ,EAAE,UAAU;wBAAE/C,CAAC,EAAE,CAAC;wBAAEoD,CAAC,EAAE;sBAAE,CAAE;sBAAAjD,QAAA,eAEjH3E,OAAA,CAACZ,KAAK;wBACJmF,EAAE,EAAE;0BACFiC,OAAO,EAAE1C,MAAM,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;0BAChDC,MAAM,EAAEiE,WAAW;0BACnBR,SAAS,EAAE,MAAM;0BACjB/B,KAAK,EAAE,MAAM;0BACbgB,YAAY,EAAE,CAAC;0BACf2B,SAAS,EAAE,qBAAqB;0BAChCC,MAAM,EAAE,MAAM;0BACdd,QAAQ,EAAE,UAAU;0BACpBO,GAAG,EAAEC,QAAQ;0BACbO,IAAI,EAAE,CAAC;0BACPV,CAAC,EAAE,CAAC;0BACJD,MAAM,EAAE,CAAC;0BACTY,QAAQ,EAAE,SAAS;0BACnB3D,OAAO,EAAE,MAAM;0BACfG,UAAU,EAAE,QAAQ;0BACpByD,cAAc,EAAE;wBAClB,CAAE;wBAAA7D,QAAA,EAGDhB,OAAO,iBACN3D,OAAA,CAAAE,SAAA;0BAAAyE,QAAA,gBACE3E,OAAA,CAACR,UAAU;4BACTiJ,IAAI,EAAC,OAAO;4BACZxC,KAAK,EAAC,OAAO;4BACbyC,OAAO,EAAEA,CAAA,KAAMnI,aAAa,CAACU,KAAK,CAAC0H,EAAE,CAAE;4BACvCpE,EAAE,EAAE;8BAAEgD,QAAQ,EAAE,UAAU;8BAAEO,GAAG,EAAE,CAAC;8BAAEc,KAAK,EAAE,CAAC;8BAAEjB,MAAM,EAAE,CAAC;8BAAEnB,OAAO,EAAE,MAAM;8BAAEC,YAAY,EAAE;4BAAE,CAAE;4BAAA9B,QAAA,eAE5F3E,OAAA,CAACV,UAAU;8BAACuG,SAAS,EAAC,MAAM;8BAACtB,EAAE,EAAE;gCAAEqC,QAAQ,EAAE,EAAE;gCAAEZ,UAAU,EAAE,MAAM;gCAAE6C,UAAU,EAAE;8BAAE,CAAE;8BAAAlE,QAAA,EAAC;4BAAC;8BAAAU,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAY;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAC1F,CAAC,eACbxF,OAAA,CAACX,GAAG;4BAACkF,EAAE,EAAE;8BACPC,CAAC,EAAE,CAAC;8BAAEsE,EAAE,EAAE,CAAC;8BACXrD,KAAK,EAAE,MAAM;8BACb1B,MAAM,EAAE,MAAM;8BACdwE,QAAQ,EAAE,SAAS;8BACnB3D,OAAO,EAAE,MAAM;8BACfG,UAAU,EAAE,QAAQ;8BACpByD,cAAc,EAAE;4BAClB,CAAE;4BAAA7D,QAAA,eACA3E,OAAA,CAACV,UAAU;8BAACsG,OAAO,EAAC,WAAW;8BAACrB,EAAE,EAAE;gCAAEK,OAAO,EAAE,MAAM;gCAAEG,UAAU,EAAE,QAAQ;gCAAEF,GAAG,EAAE,CAAC;gCAAEmB,UAAU,EAAE,GAAG;gCAAEY,QAAQ,EAAE;8BAAG,CAAE;8BAAAjC,QAAA,gBACnH3E,OAAA;gCAAM+I,KAAK,EAAE;kCAAEnC,QAAQ,EAAE;gCAAG,CAAE;gCAAAjC,QAAA,EAAEwD,cAAc,CAAClH,KAAK,CAAC+H,KAAK,CAAC,IAAI;8BAAE;gCAAA3D,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAO,CAAC,EACxEvE,KAAK,CAAC+H,KAAK,eACZhJ,OAAA,CAACT,IAAI;gCACHsH,KAAK,EAAE/C,MAAO;gCACd2E,IAAI,EAAC,OAAO;gCACZlE,EAAE,EAAE;kCAAEU,EAAE,EAAE,CAAC;kCAAE4C,EAAE,EAAE,CAAC;kCAAErB,OAAO,EAAE1C,MAAM,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;kCAAEmC,KAAK,EAAE,MAAM;kCAAED,UAAU,EAAE,GAAG;kCAAES,YAAY,EAAE,CAAC;kCAAEC,EAAE,EAAE,CAAC;kCAAEE,QAAQ,EAAE;gCAAG;8BAAE;gCAAAvB,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAC9I,CAAC,EACDvE,KAAK,CAACU,QAAQ;4BAAA;8BAAA0D,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACL;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACV,CAAC;wBAAA,eACN;sBACH;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACI;oBAAC,GAvDAvE,KAAK,CAAC0H,EAAE,GAAG,GAAG,GAAGhH,QAAQ;sBAAA0D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAwD9B,CAAC;kBAEV,CAAC,MAAM;oBACL,oBAAOxF,OAAA,CAACX,GAAG;sBAA+BkF,EAAE,EAAE;wBAAEkB,KAAK,EAAE,KAAK;wBAAE1B,MAAM,EAAE,GAAG5D,WAAW,IAAI;wBAAEqE,CAAC,EAAE,CAAC;wBAAEoD,CAAC,EAAE,CAAC;wBAAEL,QAAQ,EAAE,UAAU;wBAAEI,MAAM,EAAE,CAAC;wBAAEjD,UAAU,EAAE;sBAAc;oBAAE,GAAlJZ,MAAM,GAAG,GAAG,GAAGnC,QAAQ;sBAAA0D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAA6H,CAAC;kBACxK;gBACF,CAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA,GApHE7D,QAAQ;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAqHb,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;AAAChF,EAAA,CAxQQH,QAAQ;AAAA4I,EAAA,GAAR5I,QAAQ;AA0QjB,eAAeA,QAAQ;AAAC,IAAA4I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}